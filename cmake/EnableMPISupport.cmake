# Configure the MPI options that will be required in a project using MPI
MACRO(ENABLE_MPI_SUPPORT)

  # Add the user supplied MPI prefix to help find MPI
  IF(DEFINED MPI_PREFIX)
    SET(CMAKE_PREFIX_PATH ${MPI_PREFIX} ${CMAKE_PREFIX_PATH})
  ENDIF()

  # Find the default MPI package available on this system
  FIND_PACKAGE(MPI 1.6.5 REQUIRED)

  # Add the MPI-specific compile and linker flags and include paths
  SET(CMAKE_CXX_COMPILER ${MPI_CXX_COMPILER})
  SET(CMAKE_CXX_COMPILE_FLAGS "${CMAKE_CXX_COMPILE_FLAGS} ${MPI_CXX_COMPILE_FLAGS}")
  SET(CMAKE_CXX_LINK_FLAGS "${CMAKE_CXX_LINK_FLAGS} ${MPI_CXX_LINK_FLAGS}")
  INCLUDE_DIRECTORIES(${MPI_CXX_INCLUDE_PATH})

  SET(CMAKE_C_COMPILER ${MPI_C_COMPILER})
  SET(CMAKE_C_COMPILE_FLAGS "${CMAKE_C_COMPILE_FLAGS} ${MPI_C_COMPILE_FLAGS}")
  SET(CMAKE_C_LINK_FLAGS "${CMAKE_C_LINK_FLAGS} ${MPI_C_LINK_FLAGS}")
  INCLUDE_DIRECTORIES(${MPI_C_INCLUDE_PATH})

  SET(CMAKE_Fortran_COMPILER ${MPI_Fortan_COMPILER})
  SET(CMAKE_Fortran_COMPILE_FLAGS "${CMAKE_Fortran_COMPILE_FLAGS} ${MPI_Fortran_COMPILE_FLAGS}")
  SET(CMAKE_Fortran_LINK_FLAGS "${CMAKE_Fortran_LINK_FLAGS} ${MPI_Fortran_LINK_FLAGS}")
  INCLUDE_DIRECTORIES(${MPI_Fortran_INCLUDE_PATH})

ENDMACRO()
