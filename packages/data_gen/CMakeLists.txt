# Set up the data gen package directory hierarchy
ADD_SUBDIRECTORY(endl)
INCLUDE_DIRECTORIES(endl/src)

# Create the endl generator
ADD_EXECUTABLE(endl_generator ${GLOBAL_TOOLS_TEST_DATA_SOURCE_DIR}/endl_generator.cpp)
TARGET_LINK_LIBRARIES(endl_generator data_gen_endl)

# Use this variable in the argument list of tests that require the test
SET(TEST_H_ENDL_NATIVE_FILE ${CMAKE_CURRENT_BINARY_DIR}/test_h_endl_native.xml)
SET(TEST_C_ENDL_NATIVE_FILE ${CMAKE_CURRENT_BINARY_DIR}/test_c_endl_native.xml)
SET(TEST_AL_ENDL_NATIVE_FILE ${CMAKE_CURRENT_BINARY_DIR}/test_al_endl_native.xml)
SET(TEST_SI_ENDL_NATIVE_FILE ${CMAKE_CURRENT_BINARY_DIR}/test_si_endl_native.xml)
SET(TEST_PB_ENDL_NATIVE_FILE ${CMAKE_CURRENT_BINARY_DIR}/test_pb_endl_native.xml)

ADD_CUSTOM_COMMAND(OUTPUT ${TEST_H_ENDL_NATIVE_FILE}
  DEPENDS endl_generator
  WORKING_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}
  COMMAND endl_generator
  --eadl_file=${eadl1}
  --epdl_file=${epdl1}
  --eedl_file=${eedl1}
  --output_file=${TEST_H_ENDL_NATIVE_FILE})

ADD_CUSTOM_COMMAND(OUTPUT ${TEST_C_ENDL_NATIVE_FILE}
  DEPENDS endl_generator
  WORKING_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}
  COMMAND endl_generator
  --eadl_file=${eadl6}
  --epdl_file=${epdl6}
  --eedl_file=${eedl6}
  --output_file=${TEST_C_ENDL_NATIVE_FILE})

ADD_CUSTOM_COMMAND(OUTPUT ${TEST_AL_ENDL_NATIVE_FILE}
  DEPENDS endl_generator
  WORKING_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}
  COMMAND endl_generator
  --eadl_file=${eadl13}
  --epdl_file=${epdl13}
  --eedl_file=${eedl13}
  --output_file=${TEST_AL_ENDL_NATIVE_FILE})

ADD_CUSTOM_COMMAND(OUTPUT ${TEST_SI_ENDL_NATIVE_FILE}
  DEPENDS endl_generator
  WORKING_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}
  COMMAND endl_generator
  --eadl_file=${eadl14}
  --epdl_file=${epdl14}
  --eedl_file=${eedl14}
  --output_file=${TEST_SI_ENDL_NATIVE_FILE})

ADD_CUSTOM_COMMAND(OUTPUT ${TEST_PB_ENDL_NATIVE_FILE}
  DEPENDS endl_generator
  WORKING_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}
  COMMAND endl_generator
  --eadl_file=${eadl82}
  --epdl_file=${epdl82}
  --eedl_file=${eedl82}
  --output_file=${TEST_PB_ENDL_NATIVE_FILE})

SET(TEST_H_ENDL_NATIVE_FILE_TARGET test_h_endl_native_xml_target)
SET(TEST_C_ENDL_NATIVE_FILE_TARGET test_c_endl_native_xml_target)
SET(TEST_AL_ENDL_NATIVE_FILE_TARGET test_al_endl_native_xml_target)
SET(TEST_SI_ENDL_NATIVE_FILE_TARGET test_si_endl_native_xml_target)
SET(TEST_PB_ENDL_NATIVE_FILE_TARGET test_pb_endl_native_xml_target)

ADD_CUSTOM_TARGET(${TEST_H_ENDL_NATIVE_FILE_TARGET} ALL
  DEPENDS ${TEST_H_ENDL_NATIVE_FILE})

ADD_CUSTOM_TARGET(${TEST_C_ENDL_NATIVE_FILE_TARGET} ALL
  DEPENDS ${TEST_C_ENDL_NATIVE_FILE})

ADD_CUSTOM_TARGET(${TEST_AL_ENDL_NATIVE_FILE_TARGET} ALL
  DEPENDS ${TEST_AL_ENDL_NATIVE_FILE})

ADD_CUSTOM_TARGET(${TEST_SI_ENDL_NATIVE_FILE_TARGET} ALL
  DEPENDS ${TEST_SI_ENDL_NATIVE_FILE})

ADD_CUSTOM_TARGET(${TEST_PB_ENDL_NATIVE_FILE_TARGET} ALL
  DEPENDS ${TEST_PB_ENDL_NATIVE_FILE})

ADD_SUBDIRECTORY(electron_photon)
INCLUDE_DIRECTORIES(electron_photon/src)

ADD_SUBDIRECTORY(free_gas_sab)
INCLUDE_DIRECTORIES(free_gas_sab/src)

# Move the file and target variables to the parent scope
SET(TEST_H_ENDL_NATIVE_FILE ${TEST_H_ENDL_NATIVE_FILE} PARENT_SCOPE)
SET(TEST_C_ENDL_NATIVE_FILE ${TEST_C_ENDL_NATIVE_FILE} PARENT_SCOPE)
SET(TEST_AL_ENDL_NATIVE_FILE ${TEST_AL_ENDL_NATIVE_FILE} PARENT_SCOPE)
SET(TEST_SI_ENDL_NATIVE_FILE ${TEST_SI_ENDL_NATIVE_FILE} PARENT_SCOPE)
SET(TEST_PB_ENDL_NATIVE_FILE ${TEST_PB_ENDL_NATIVE_FILE} PARENT_SCOPE)

SET(TEST_H_ENDL_NATIVE_FILE_TARGET ${TEST_H_ENDL_NATIVE_FILE_TARGET}  PARENT_SCOPE)
SET(TEST_C_ENDL_NATIVE_FILE_TARGET ${TEST_C_ENDL_NATIVE_FILE_TARGET} PARENT_SCOPE)
SET(TEST_AL_ENDL_NATIVE_FILE_TARGET ${TEST_AL_ENDL_NATIVE_FILE_TARGET} PARENT_SCOPE)
SET(TEST_SI_ENDL_NATIVE_FILE_TARGET ${TEST_SI_ENDL_NATIVE_FILE_TARGET} PARENT_SCOPE)
SET(TEST_PB_ENDL_NATIVE_FILE_TARGET ${TEST_PB_ENDL_NATIVE_FILE_TARGET} PARENT_SCOPE)
