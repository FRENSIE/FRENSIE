#! ${PYTHON_EXECUTABLE}
#-----------------------------------------------------------------------------#
## Geometry.InfiniteMediumModel class unit tests
#  \file   tstGeometry.InfiniteMediumModel.py
#  \author Alex Robinson, Philip Britt
#  \brief  Unit tests for the Geometry.InfiniteMediumModel class
#-----------------------------------------------------------------------------#

# System imports
import numpy
import sys
import inspect
import unittest
from optparse import *

# Parse the command-line arguments
parser = OptionParser()
parser.add_option("-v", "--verbosity", type="int", dest="verbosity", default=2,
                  help="set the verbosity level [default 2]")
parser.add_option("-d", "--dagmc_h5m_file", type="string", dest="dagmc_h5m_file", default="",
                  help="set the dagmc xml file that will be used to create the model")
parser.add_option("-r", "--root_file", type="string", dest="root_file", default="",
                  help="set the root xml file that will be used to create the model")
options,args = parser.parse_args()

from testingHelpers import importPyFrensieModuleFromBuildDir
Utility = importPyFrensieModuleFromBuildDir('Utility')
Geometry = importPyFrensieModuleFromBuildDir('Geometry')

#-----------------------------------------------------------------------------#
# Tests.
#-----------------------------------------------------------------------------#
# Test the Model class with a Infinite Medium geometry 
class InfiniteMediumModelTestCase( unittest.TestCase ):
  "TestCase class for Geometry.Model class for infinite medium geometry"
  
  def testDefaultConstructor(self):
    model = Geometry.InfiniteMediumModel()


#-----------------------------------------------------------------------------#
# Custom main
#-----------------------------------------------------------------------------#
if __name__ == "__main__":

    # Create the test suite object
    suite = unittest.TestSuite()

    # Add the test cases to the test suite
    suite.addTest(unittest.makeSuite(InfiniteMediumModelTestCase))

    print >>sys.stderr, \
        "\n**************************************\n" + \
        "Testing Geometry.InfiniteMediumModel \n" + \
        "**************************************\n"
    result = unittest.TextTestRunner(verbosity=options.verbosity).run(suite)

    errs_plus_fails = len(result.errors) + len(result.failures)

    if errs_plus_fails == 0:
        print "End Result: TEST PASSED"

    # Delete the suite
    del suite

    # Exit
    sys.exit(errs_plus_fails)

#-----------------------------------------------------------------------------#
# end tstGeometry.InfiniteMediumModel.py
#-----------------------------------------------------------------------------#
