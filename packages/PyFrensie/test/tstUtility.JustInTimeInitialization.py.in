#! ${PYTHON_EXECUTABLE}
#-----------------------------------------------------------------------------#
## Utility.JustInTimeInitialization module unit tests
#  \file   tstUtility.JustInTimeInitialization.py
#  \author Alex Robinson
#  \brief  Unit tests for the Utility module
#-----------------------------------------------------------------------------#

# System imports
import sys
import unittest
from optparse import *
import numpy
import math as m

from testingHelpers import importPyFrensieModuleFromBuildDir
Utility = importPyFrensieModuleFromBuildDir('Utility')

# Parse the command-line arguments
parser = OptionParser()
parser.add_option("-v", "--verbosity", type="int", dest="verbosity", default=2,
                  help="set the verbosity level [default 2]")
options,args = parser.parse_args()

#-----------------------------------------------------------------------------#
# Tests.
#-----------------------------------------------------------------------------#
# Test the array from string methods
class JustInTimeInitialization(unittest.TestCase):
    "TestCase class for Utility just-in-time initialization methods"

    def testActivateJustInTimeInitialization(self):
        "*Test Utility.activateJustInTimeInitialization method"
        self.assertFalse( Utility.isJustInTimeInitializationActive() )

        Utility.activateJustInTimeInitialization()

        self.assertTrue( Utility.isJustInTimeInitializationActive() )

        Utility.deactivateJustInTimeInitialization()

        self.assertFalse( Utility.isJustInTimeInitializationActive() )

#-----------------------------------------------------------------------------#
# Custom main
#-----------------------------------------------------------------------------#
if __name__ == "__main__":

    # Create the testSuite object
    suite = unittest.TestSuite()

    # Add the test cases to the testSuite
    suite.addTest(unittest.makeSuite(JustInTimeInitialization))

    print >>sys.stderr, \
        "\n**************************************\n" + \
        "Testing Utility.JustInTimeInitialization \n" + \
        "**************************************\n"
    result = unittest.TextTestRunner(verbosity=options.verbosity).run(suite)

    errs_plus_fails = len(result.errors) + len(result.failures)

    if errs_plus_fails == 0:
        print "End Result: TEST PASSED"

        # Delete the suite
    del suite

        # Exit
    sys.exit(errs_plus_fails)

#-----------------------------------------------------------------------------#
# end tstUtility.JustInTimeInitialization.py
#-----------------------------------------------------------------------------#
