//---------------------------------------------------------------------------//
//!
//! \file   MonteCarlo_PhotoatomicReactionType.hpp
//! \author Alex Robinson
//! \brief  Photoatomic reaction type enumeration and helper function decls.
//!
//---------------------------------------------------------------------------//

#ifndef MONTE_CARLO_PHOTOATOMIC_REACTION_TYPE_HPP
#define MONTE_CARLO_PHOTOATOMIC_REACTION_TYPE_HPP

// Std Lib Includes
#include <string>
#include <iostream>

// FRENSIE Includes
#include "Data_SubshellType.hpp"
#include "Utility_ToStringTraits.hpp"
#include "Utility_SerializationHelpers.hpp"
#include "Utility_ExceptionTestMacros.hpp"

namespace MonteCarlo{

//! The photoatomic reaction type enum.
enum PhotoatomicReactionType{
  TOTAL_PHOTOATOMIC_REACTION = 1,
  TOTAL_ABSORPTION_PHOTOATOMIC_REACTION = 2,
  TOTAL_INCOHERENT_PHOTOATOMIC_REACTION = 3,
  K_SUBSHELL_INCOHERENT_PHOTOATOMIC_REACTION = 4,
  L1_SUBSHELL_INCOHERENT_PHOTOATOMIC_REACTION = 5,
  L2_SUBSHELL_INCOHERENT_PHOTOATOMIC_REACTION = 6,
  L3_SUBSHELL_INCOHERENT_PHOTOATOMIC_REACTION = 7,
  M1_SUBSHELL_INCOHERENT_PHOTOATOMIC_REACTION = 8,
  M2_SUBSHELL_INCOHERENT_PHOTOATOMIC_REACTION = 9,
  M3_SUBSHELL_INCOHERENT_PHOTOATOMIC_REACTION = 10,
  M4_SUBSHELL_INCOHERENT_PHOTOATOMIC_REACTION = 11,
  M5_SUBSHELL_INCOHERENT_PHOTOATOMIC_REACTION = 12,
  N1_SUBSHELL_INCOHERENT_PHOTOATOMIC_REACTION = 13,
  N2_SUBSHELL_INCOHERENT_PHOTOATOMIC_REACTION = 14,
  N3_SUBSHELL_INCOHERENT_PHOTOATOMIC_REACTION = 15,
  N4_SUBSHELL_INCOHERENT_PHOTOATOMIC_REACTION = 16,
  N5_SUBSHELL_INCOHERENT_PHOTOATOMIC_REACTION = 17,
  N6_SUBSHELL_INCOHERENT_PHOTOATOMIC_REACTION = 18,
  N7_SUBSHELL_INCOHERENT_PHOTOATOMIC_REACTION = 19,
  O1_SUBSHELL_INCOHERENT_PHOTOATOMIC_REACTION = 20,
  O2_SUBSHELL_INCOHERENT_PHOTOATOMIC_REACTION = 21,
  O3_SUBSHELL_INCOHERENT_PHOTOATOMIC_REACTION = 22,
  O4_SUBSHELL_INCOHERENT_PHOTOATOMIC_REACTION = 23,
  O5_SUBSHELL_INCOHERENT_PHOTOATOMIC_REACTION = 24,
  O6_SUBSHELL_INCOHERENT_PHOTOATOMIC_REACTION = 25,
  O7_SUBSHELL_INCOHERENT_PHOTOATOMIC_REACTION = 26,
  O8_SUBSHELL_INCOHERENT_PHOTOATOMIC_REACTION = 27,
  O9_SUBSHELL_INCOHERENT_PHOTOATOMIC_REACTION = 28,
  P1_SUBSHELL_INCOHERENT_PHOTOATOMIC_REACTION = 29,
  P2_SUBSHELL_INCOHERENT_PHOTOATOMIC_REACTION = 30,
  P3_SUBSHELL_INCOHERENT_PHOTOATOMIC_REACTION = 31,
  P4_SUBSHELL_INCOHERENT_PHOTOATOMIC_REACTION = 32,
  P5_SUBSHELL_INCOHERENT_PHOTOATOMIC_REACTION = 33,
  P6_SUBSHELL_INCOHERENT_PHOTOATOMIC_REACTION = 34,
  P7_SUBSHELL_INCOHERENT_PHOTOATOMIC_REACTION = 35,
  P8_SUBSHELL_INCOHERENT_PHOTOATOMIC_REACTION = 36,
  P9_SUBSHELL_INCOHERENT_PHOTOATOMIC_REACTION = 37,
  P10_SUBSHELL_INCOHERENT_PHOTOATOMIC_REACTION = 38,
  P11_SUBSHELL_INCOHERENT_PHOTOATOMIC_REACTION = 39,
  Q1_SUBSHELL_INCOHERENT_PHOTOATOMIC_REACTION = 40,
  Q2_SUBSHELL_INCOHERENT_PHOTOATOMIC_REACTION = 41,
  Q3_SUBSHELL_INCOHERENT_PHOTOATOMIC_REACTION = 42,
  COHERENT_PHOTOATOMIC_REACTION = 43,
  PAIR_PRODUCTION_PHOTOATOMIC_REACTION = 44,
  TRIPLET_PRODUCTION_PHOTOATOMIC_REACTION = 45,
  TOTAL_PHOTOELECTRIC_PHOTOATOMIC_REACTION = 46,
  K_SUBSHELL_PHOTOELECTRIC_PHOTOATOMIC_REACTION = 47,
  L1_SUBSHELL_PHOTOELECTRIC_PHOTOATOMIC_REACTION = 48,
  L2_SUBSHELL_PHOTOELECTRIC_PHOTOATOMIC_REACTION = 49,
  L3_SUBSHELL_PHOTOELECTRIC_PHOTOATOMIC_REACTION = 50,
  M1_SUBSHELL_PHOTOELECTRIC_PHOTOATOMIC_REACTION = 51,
  M2_SUBSHELL_PHOTOELECTRIC_PHOTOATOMIC_REACTION = 52,
  M3_SUBSHELL_PHOTOELECTRIC_PHOTOATOMIC_REACTION = 53,
  M4_SUBSHELL_PHOTOELECTRIC_PHOTOATOMIC_REACTION = 54,
  M5_SUBSHELL_PHOTOELECTRIC_PHOTOATOMIC_REACTION = 55,
  N1_SUBSHELL_PHOTOELECTRIC_PHOTOATOMIC_REACTION = 56,
  N2_SUBSHELL_PHOTOELECTRIC_PHOTOATOMIC_REACTION = 57,
  N3_SUBSHELL_PHOTOELECTRIC_PHOTOATOMIC_REACTION = 58,
  N4_SUBSHELL_PHOTOELECTRIC_PHOTOATOMIC_REACTION = 59,
  N5_SUBSHELL_PHOTOELECTRIC_PHOTOATOMIC_REACTION = 60,
  N6_SUBSHELL_PHOTOELECTRIC_PHOTOATOMIC_REACTION = 61,
  N7_SUBSHELL_PHOTOELECTRIC_PHOTOATOMIC_REACTION = 62,
  O1_SUBSHELL_PHOTOELECTRIC_PHOTOATOMIC_REACTION = 63,
  O2_SUBSHELL_PHOTOELECTRIC_PHOTOATOMIC_REACTION = 64,
  O3_SUBSHELL_PHOTOELECTRIC_PHOTOATOMIC_REACTION = 65,
  O4_SUBSHELL_PHOTOELECTRIC_PHOTOATOMIC_REACTION = 66,
  O5_SUBSHELL_PHOTOELECTRIC_PHOTOATOMIC_REACTION = 67,
  O6_SUBSHELL_PHOTOELECTRIC_PHOTOATOMIC_REACTION = 68,
  O7_SUBSHELL_PHOTOELECTRIC_PHOTOATOMIC_REACTION = 69,
  O8_SUBSHELL_PHOTOELECTRIC_PHOTOATOMIC_REACTION = 70,
  O9_SUBSHELL_PHOTOELECTRIC_PHOTOATOMIC_REACTION = 71,
  P1_SUBSHELL_PHOTOELECTRIC_PHOTOATOMIC_REACTION = 72,
  P2_SUBSHELL_PHOTOELECTRIC_PHOTOATOMIC_REACTION = 73,
  P3_SUBSHELL_PHOTOELECTRIC_PHOTOATOMIC_REACTION = 74,
  P4_SUBSHELL_PHOTOELECTRIC_PHOTOATOMIC_REACTION = 75,
  P5_SUBSHELL_PHOTOELECTRIC_PHOTOATOMIC_REACTION = 76,
  P6_SUBSHELL_PHOTOELECTRIC_PHOTOATOMIC_REACTION = 77,
  P7_SUBSHELL_PHOTOELECTRIC_PHOTOATOMIC_REACTION = 78,
  P8_SUBSHELL_PHOTOELECTRIC_PHOTOATOMIC_REACTION = 79,
  P9_SUBSHELL_PHOTOELECTRIC_PHOTOATOMIC_REACTION = 80,
  P10_SUBSHELL_PHOTOELECTRIC_PHOTOATOMIC_REACTION = 81,
  P11_SUBSHELL_PHOTOELECTRIC_PHOTOATOMIC_REACTION = 82,
  Q1_SUBSHELL_PHOTOELECTRIC_PHOTOATOMIC_REACTION = 83,
  Q2_SUBSHELL_PHOTOELECTRIC_PHOTOATOMIC_REACTION = 84,
  Q3_SUBSHELL_PHOTOELECTRIC_PHOTOATOMIC_REACTION = 85,
  HEATING_PHOTOATOMIC_REACTION = 86
};

//! Convert a Data::SubshellType enum to a Photoelectric PhotoatomicReactionType enum
PhotoatomicReactionType
convertSubshellEnumToPhotoelectricPhotoatomicReactionEnum(
					   const Data::SubshellType subshell );

//! Convert a Data::SubshellType enum to a Incoherent PhotoatomicReactionType enum
PhotoatomicReactionType
convertSubshellEnumToIncoherentPhotoatomicReactionEnum(
					   const Data::SubshellType subshell );

} // end MonteCarlo namespace

namespace Utility{

/*! \brief Specialization of Utility::ToStringTraits for
 * MonteCarlo::PhotoatomicReactionType
 * \ingroup to_string_traits
 */
template<>
struct ToStringTraits<MonteCarlo::PhotoatomicReactionType>
{
  //! Convert a MonteCarlo::PhotoatomicReactionType to a string
  static std::string toString( const MonteCarlo::PhotoatomicReactionType type );

  //! Place the MonteCarlo::PhotoatomicReactionType in a stream
  static void toStream( std::ostream& os, const MonteCarlo::PhotoatomicReactionType type );
};

/*! Specialization of Utility::IsHashable for MonteCarlo::PhotoatomicReactionType
 * \ingroup type_traits
 */
template<>
struct IsHashable<MonteCarlo::PhotoatomicReactionType> : public std::true_type
{ /* ... */ };

} // end Utility namespace

namespace std{

//! Stream operator for printing MonteCarlo::PhotoatomicReactionType enums
inline std::ostream& operator<<( std::ostream& os,
				 const MonteCarlo::PhotoatomicReactionType reaction )
{
  os << Utility::toString( reaction );
  return os;
}

//! Specialization of std::hash for MonteCarlo::PhotoatomicReactionType
template<>
struct hash<MonteCarlo::PhotoatomicReactionType> : public hash<unsigned>
{ /* ... */ };

} // end std namespace

namespace boost{

namespace serialization{

//! Serialize the MonteCarlo::PhotoatomicReactionType enums
template<typename Archive>
void serialize( Archive& archive,
                MonteCarlo::PhotoatomicReactionType& type,
                const unsigned version )
{
  if( Archive::is_saving::value )
    archive & (int)type;
  else
  {
    int raw_type;

    archive & raw_type;

    switch( raw_type )
    {
      BOOST_SERIALIZATION_ENUM_CASE( MonteCarlo::TOTAL_PHOTOATOMIC_REACTION, int, type );
      BOOST_SERIALIZATION_ENUM_CASE( MonteCarlo::TOTAL_ABSORPTION_PHOTOATOMIC_REACTION, int, type );
      BOOST_SERIALIZATION_ENUM_CASE( MonteCarlo::TOTAL_INCOHERENT_PHOTOATOMIC_REACTION, int, type );
      BOOST_SERIALIZATION_ENUM_CASE( MonteCarlo::K_SUBSHELL_INCOHERENT_PHOTOATOMIC_REACTION, int, type );
      BOOST_SERIALIZATION_ENUM_CASE( MonteCarlo::L1_SUBSHELL_INCOHERENT_PHOTOATOMIC_REACTION, int, type );
      BOOST_SERIALIZATION_ENUM_CASE( MonteCarlo::L2_SUBSHELL_INCOHERENT_PHOTOATOMIC_REACTION, int, type );
      BOOST_SERIALIZATION_ENUM_CASE( MonteCarlo::L3_SUBSHELL_INCOHERENT_PHOTOATOMIC_REACTION, int, type );
      BOOST_SERIALIZATION_ENUM_CASE( MonteCarlo::M1_SUBSHELL_INCOHERENT_PHOTOATOMIC_REACTION, int, type );
      BOOST_SERIALIZATION_ENUM_CASE( MonteCarlo::M2_SUBSHELL_INCOHERENT_PHOTOATOMIC_REACTION, int, type );
      BOOST_SERIALIZATION_ENUM_CASE( MonteCarlo::M3_SUBSHELL_INCOHERENT_PHOTOATOMIC_REACTION, int, type );
      BOOST_SERIALIZATION_ENUM_CASE( MonteCarlo::M4_SUBSHELL_INCOHERENT_PHOTOATOMIC_REACTION, int, type );
      BOOST_SERIALIZATION_ENUM_CASE( MonteCarlo::M5_SUBSHELL_INCOHERENT_PHOTOATOMIC_REACTION, int, type );
      BOOST_SERIALIZATION_ENUM_CASE( MonteCarlo::N1_SUBSHELL_INCOHERENT_PHOTOATOMIC_REACTION, int, type );
      BOOST_SERIALIZATION_ENUM_CASE( MonteCarlo::N2_SUBSHELL_INCOHERENT_PHOTOATOMIC_REACTION, int, type );
      BOOST_SERIALIZATION_ENUM_CASE( MonteCarlo::N3_SUBSHELL_INCOHERENT_PHOTOATOMIC_REACTION, int, type );
      BOOST_SERIALIZATION_ENUM_CASE( MonteCarlo::N4_SUBSHELL_INCOHERENT_PHOTOATOMIC_REACTION, int, type );
      BOOST_SERIALIZATION_ENUM_CASE( MonteCarlo::N5_SUBSHELL_INCOHERENT_PHOTOATOMIC_REACTION, int, type );
      BOOST_SERIALIZATION_ENUM_CASE( MonteCarlo::N6_SUBSHELL_INCOHERENT_PHOTOATOMIC_REACTION, int, type );
      BOOST_SERIALIZATION_ENUM_CASE( MonteCarlo::N7_SUBSHELL_INCOHERENT_PHOTOATOMIC_REACTION, int, type );
      BOOST_SERIALIZATION_ENUM_CASE( MonteCarlo::O1_SUBSHELL_INCOHERENT_PHOTOATOMIC_REACTION, int, type );
      BOOST_SERIALIZATION_ENUM_CASE( MonteCarlo::O2_SUBSHELL_INCOHERENT_PHOTOATOMIC_REACTION, int, type );
      BOOST_SERIALIZATION_ENUM_CASE( MonteCarlo::O3_SUBSHELL_INCOHERENT_PHOTOATOMIC_REACTION, int, type );
      BOOST_SERIALIZATION_ENUM_CASE( MonteCarlo::O4_SUBSHELL_INCOHERENT_PHOTOATOMIC_REACTION, int, type );
      BOOST_SERIALIZATION_ENUM_CASE( MonteCarlo::O5_SUBSHELL_INCOHERENT_PHOTOATOMIC_REACTION, int, type );
      BOOST_SERIALIZATION_ENUM_CASE( MonteCarlo::O6_SUBSHELL_INCOHERENT_PHOTOATOMIC_REACTION, int, type );
      BOOST_SERIALIZATION_ENUM_CASE( MonteCarlo::O7_SUBSHELL_INCOHERENT_PHOTOATOMIC_REACTION, int, type );
      BOOST_SERIALIZATION_ENUM_CASE( MonteCarlo::O8_SUBSHELL_INCOHERENT_PHOTOATOMIC_REACTION, int, type );
      BOOST_SERIALIZATION_ENUM_CASE( MonteCarlo::O9_SUBSHELL_INCOHERENT_PHOTOATOMIC_REACTION, int, type );
      BOOST_SERIALIZATION_ENUM_CASE( MonteCarlo::P1_SUBSHELL_INCOHERENT_PHOTOATOMIC_REACTION, int, type );
      BOOST_SERIALIZATION_ENUM_CASE( MonteCarlo::P2_SUBSHELL_INCOHERENT_PHOTOATOMIC_REACTION, int, type );
      BOOST_SERIALIZATION_ENUM_CASE( MonteCarlo::P3_SUBSHELL_INCOHERENT_PHOTOATOMIC_REACTION, int, type );
      BOOST_SERIALIZATION_ENUM_CASE( MonteCarlo::P4_SUBSHELL_INCOHERENT_PHOTOATOMIC_REACTION, int, type );
      BOOST_SERIALIZATION_ENUM_CASE( MonteCarlo::P5_SUBSHELL_INCOHERENT_PHOTOATOMIC_REACTION, int, type );
      BOOST_SERIALIZATION_ENUM_CASE( MonteCarlo::P6_SUBSHELL_INCOHERENT_PHOTOATOMIC_REACTION, int, type );
      BOOST_SERIALIZATION_ENUM_CASE( MonteCarlo::P7_SUBSHELL_INCOHERENT_PHOTOATOMIC_REACTION, int, type );
      BOOST_SERIALIZATION_ENUM_CASE( MonteCarlo::P8_SUBSHELL_INCOHERENT_PHOTOATOMIC_REACTION, int, type );
      BOOST_SERIALIZATION_ENUM_CASE( MonteCarlo::P9_SUBSHELL_INCOHERENT_PHOTOATOMIC_REACTION, int, type );
      BOOST_SERIALIZATION_ENUM_CASE( MonteCarlo::P10_SUBSHELL_INCOHERENT_PHOTOATOMIC_REACTION, int, type );
      BOOST_SERIALIZATION_ENUM_CASE( MonteCarlo::P11_SUBSHELL_INCOHERENT_PHOTOATOMIC_REACTION, int, type );
      BOOST_SERIALIZATION_ENUM_CASE( MonteCarlo::Q1_SUBSHELL_INCOHERENT_PHOTOATOMIC_REACTION, int, type );
      BOOST_SERIALIZATION_ENUM_CASE( MonteCarlo::Q2_SUBSHELL_INCOHERENT_PHOTOATOMIC_REACTION, int, type );
      BOOST_SERIALIZATION_ENUM_CASE( MonteCarlo::Q3_SUBSHELL_INCOHERENT_PHOTOATOMIC_REACTION, int, type );
      BOOST_SERIALIZATION_ENUM_CASE( MonteCarlo::COHERENT_PHOTOATOMIC_REACTION, int, type );
      BOOST_SERIALIZATION_ENUM_CASE( MonteCarlo::PAIR_PRODUCTION_PHOTOATOMIC_REACTION, int, type );
      BOOST_SERIALIZATION_ENUM_CASE( MonteCarlo::TRIPLET_PRODUCTION_PHOTOATOMIC_REACTION, int, type );
      BOOST_SERIALIZATION_ENUM_CASE( MonteCarlo::TOTAL_PHOTOELECTRIC_PHOTOATOMIC_REACTION, int, type );
      BOOST_SERIALIZATION_ENUM_CASE( MonteCarlo::K_SUBSHELL_PHOTOELECTRIC_PHOTOATOMIC_REACTION, int, type );
      BOOST_SERIALIZATION_ENUM_CASE( MonteCarlo::L1_SUBSHELL_PHOTOELECTRIC_PHOTOATOMIC_REACTION, int, type );
      BOOST_SERIALIZATION_ENUM_CASE( MonteCarlo::L2_SUBSHELL_PHOTOELECTRIC_PHOTOATOMIC_REACTION, int, type );
      BOOST_SERIALIZATION_ENUM_CASE( MonteCarlo::L3_SUBSHELL_PHOTOELECTRIC_PHOTOATOMIC_REACTION, int, type );
      BOOST_SERIALIZATION_ENUM_CASE( MonteCarlo::M1_SUBSHELL_PHOTOELECTRIC_PHOTOATOMIC_REACTION, int, type );
      BOOST_SERIALIZATION_ENUM_CASE( MonteCarlo::M2_SUBSHELL_PHOTOELECTRIC_PHOTOATOMIC_REACTION, int, type );
      BOOST_SERIALIZATION_ENUM_CASE( MonteCarlo::M3_SUBSHELL_PHOTOELECTRIC_PHOTOATOMIC_REACTION, int, type );
      BOOST_SERIALIZATION_ENUM_CASE( MonteCarlo::M4_SUBSHELL_PHOTOELECTRIC_PHOTOATOMIC_REACTION, int, type );
      BOOST_SERIALIZATION_ENUM_CASE( MonteCarlo::M5_SUBSHELL_PHOTOELECTRIC_PHOTOATOMIC_REACTION, int, type );
      BOOST_SERIALIZATION_ENUM_CASE( MonteCarlo::N1_SUBSHELL_PHOTOELECTRIC_PHOTOATOMIC_REACTION, int, type );
      BOOST_SERIALIZATION_ENUM_CASE( MonteCarlo::N2_SUBSHELL_PHOTOELECTRIC_PHOTOATOMIC_REACTION, int, type );
      BOOST_SERIALIZATION_ENUM_CASE( MonteCarlo::N3_SUBSHELL_PHOTOELECTRIC_PHOTOATOMIC_REACTION, int, type );
      BOOST_SERIALIZATION_ENUM_CASE( MonteCarlo::N4_SUBSHELL_PHOTOELECTRIC_PHOTOATOMIC_REACTION, int, type );
      BOOST_SERIALIZATION_ENUM_CASE( MonteCarlo::N5_SUBSHELL_PHOTOELECTRIC_PHOTOATOMIC_REACTION, int, type );
      BOOST_SERIALIZATION_ENUM_CASE( MonteCarlo::N6_SUBSHELL_PHOTOELECTRIC_PHOTOATOMIC_REACTION, int, type );
      BOOST_SERIALIZATION_ENUM_CASE( MonteCarlo::N7_SUBSHELL_PHOTOELECTRIC_PHOTOATOMIC_REACTION, int, type );
      BOOST_SERIALIZATION_ENUM_CASE( MonteCarlo::O1_SUBSHELL_PHOTOELECTRIC_PHOTOATOMIC_REACTION, int, type );
      BOOST_SERIALIZATION_ENUM_CASE( MonteCarlo::O2_SUBSHELL_PHOTOELECTRIC_PHOTOATOMIC_REACTION, int, type );
      BOOST_SERIALIZATION_ENUM_CASE( MonteCarlo::O3_SUBSHELL_PHOTOELECTRIC_PHOTOATOMIC_REACTION, int, type );
      BOOST_SERIALIZATION_ENUM_CASE( MonteCarlo::O4_SUBSHELL_PHOTOELECTRIC_PHOTOATOMIC_REACTION, int, type );
      BOOST_SERIALIZATION_ENUM_CASE( MonteCarlo::O5_SUBSHELL_PHOTOELECTRIC_PHOTOATOMIC_REACTION, int, type );
      BOOST_SERIALIZATION_ENUM_CASE( MonteCarlo::O6_SUBSHELL_PHOTOELECTRIC_PHOTOATOMIC_REACTION, int, type );
      BOOST_SERIALIZATION_ENUM_CASE( MonteCarlo::O7_SUBSHELL_PHOTOELECTRIC_PHOTOATOMIC_REACTION, int, type );
      BOOST_SERIALIZATION_ENUM_CASE( MonteCarlo::O8_SUBSHELL_PHOTOELECTRIC_PHOTOATOMIC_REACTION, int, type );
      BOOST_SERIALIZATION_ENUM_CASE( MonteCarlo::O9_SUBSHELL_PHOTOELECTRIC_PHOTOATOMIC_REACTION, int, type );
      BOOST_SERIALIZATION_ENUM_CASE( MonteCarlo::P1_SUBSHELL_PHOTOELECTRIC_PHOTOATOMIC_REACTION, int, type );
      BOOST_SERIALIZATION_ENUM_CASE( MonteCarlo::P2_SUBSHELL_PHOTOELECTRIC_PHOTOATOMIC_REACTION, int, type );
      BOOST_SERIALIZATION_ENUM_CASE( MonteCarlo::P3_SUBSHELL_PHOTOELECTRIC_PHOTOATOMIC_REACTION, int, type );
      BOOST_SERIALIZATION_ENUM_CASE( MonteCarlo::P4_SUBSHELL_PHOTOELECTRIC_PHOTOATOMIC_REACTION, int, type );
      BOOST_SERIALIZATION_ENUM_CASE( MonteCarlo::P5_SUBSHELL_PHOTOELECTRIC_PHOTOATOMIC_REACTION, int, type );
      BOOST_SERIALIZATION_ENUM_CASE( MonteCarlo::P6_SUBSHELL_PHOTOELECTRIC_PHOTOATOMIC_REACTION, int, type );
      BOOST_SERIALIZATION_ENUM_CASE( MonteCarlo::P7_SUBSHELL_PHOTOELECTRIC_PHOTOATOMIC_REACTION, int, type );
      BOOST_SERIALIZATION_ENUM_CASE( MonteCarlo::P8_SUBSHELL_PHOTOELECTRIC_PHOTOATOMIC_REACTION, int, type );
      BOOST_SERIALIZATION_ENUM_CASE( MonteCarlo::P9_SUBSHELL_PHOTOELECTRIC_PHOTOATOMIC_REACTION, int, type );
      BOOST_SERIALIZATION_ENUM_CASE( MonteCarlo::P10_SUBSHELL_PHOTOELECTRIC_PHOTOATOMIC_REACTION, int, type );
      BOOST_SERIALIZATION_ENUM_CASE( MonteCarlo::P11_SUBSHELL_PHOTOELECTRIC_PHOTOATOMIC_REACTION, int, type );
      BOOST_SERIALIZATION_ENUM_CASE( MonteCarlo::Q1_SUBSHELL_PHOTOELECTRIC_PHOTOATOMIC_REACTION, int, type );
      BOOST_SERIALIZATION_ENUM_CASE( MonteCarlo::Q2_SUBSHELL_PHOTOELECTRIC_PHOTOATOMIC_REACTION, int, type );
      BOOST_SERIALIZATION_ENUM_CASE( MonteCarlo::Q3_SUBSHELL_PHOTOELECTRIC_PHOTOATOMIC_REACTION, int, type );
      BOOST_SERIALIZATION_ENUM_CASE( MonteCarlo::HEATING_PHOTOATOMIC_REACTION, int, type );
      default:
      {
        THROW_EXCEPTION( std::logic_error,
                         "Cannot convert the deserialized raw photoatomic "
                         "reaction type to its corresponding enum value!" );
      }
    }
  }
}

} // end serialization namespace

} // end boost namespace

#endif // end MONTE_CARLO_PHOTOATOMIC_REACTION_TYPE_HPP

//---------------------------------------------------------------------------//
// end MonteCarlo_PhotoatomicReactionType.hpp
//---------------------------------------------------------------------------//

